table Store

	column 'Address Line 1'
		dataType: string
		summarizeBy: none
		sourceColumn: Address Line 1

		annotation SummarizationSetBy = Automatic

	column 'Address Line 2'
		dataType: string
		summarizeBy: none
		sourceColumn: Address Line 2

		annotation SummarizationSetBy = Automatic

	column City
		dataType: string
		dataCategory: City
		summarizeBy: none
		sourceColumn: City

		annotation SummarizationSetBy = Automatic

	column 'Close Date'
		dataType: dateTime
		formatString: Long Date
		summarizeBy: none
		sourceColumn: Close Date

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column 'Close Reason'
		dataType: string
		summarizeBy: none
		sourceColumn: Close Reason

		annotation SummarizationSetBy = Automatic

	column Continent
		dataType: string
		dataCategory: Continent
		summarizeBy: none
		sourceColumn: Continent

		annotation SummarizationSetBy = Automatic

	column CountryRegion
		dataType: string
		dataCategory: Country
		summarizeBy: none
		sourceColumn: CountryRegion

		annotation SummarizationSetBy = Automatic

	/// Number of active store employees
	column Employees
		dataType: int64
		summarizeBy: sum
		sourceColumn: Employees

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Last Remodel Date'
		dataType: dateTime
		formatString: Long Date
		summarizeBy: none
		sourceColumn: Last Remodel Date

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column 'Open Date'
		dataType: dateTime
		formatString: Long Date
		summarizeBy: none
		sourceColumn: Open Date

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column 'Selling Area'
		dataType: double
		summarizeBy: none
		sourceColumn: Selling Area

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column State
		dataType: string
		summarizeBy: none
		sourceColumn: State

		annotation SummarizationSetBy = Automatic

	column Status
		dataType: string
		summarizeBy: none
		sourceColumn: Status

		annotation SummarizationSetBy = Automatic

	column 'Store Name'
		dataType: string
		summarizeBy: none
		sourceColumn: Store Name

		annotation SummarizationSetBy = Automatic

	column 'Store Phone'
		dataType: string
		summarizeBy: none
		sourceColumn: Store Phone

		annotation SummarizationSetBy = Automatic

	column 'Store Type'
		dataType: string
		summarizeBy: none
		sourceColumn: Store Type

		annotation SummarizationSetBy = Automatic

	column StoreKey
		dataType: int64
		isHidden
		summarizeBy: none
		sourceColumn: StoreKey

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Zip Code Extension'
		dataType: string
		dataCategory: PostalCode
		summarizeBy: none
		sourceColumn: Zip Code Extension

		annotation SummarizationSetBy = Automatic

	column 'Zip Code'
		dataType: string
		summarizeBy: none
		sourceColumn: Zip Code

		annotation SummarizationSetBy = Automatic

	partition Store = m
		mode: import
		source =
				let
				    Source = Web.Contents(#"[SourceUrl]", [RelativePath = "pbi-tools/contoso-sales-model/main/data/Store.csv"]),
				    Csv = Csv.Document(Source),
				    #"Promoted Headers" = Table.PromoteHeaders(Csv, [PromoteAllScalars=true]),
				    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"StoreKey", Int64.Type}, {"Store Type", type text}, {"Store Name", type text}, {"Status", type text}, {"Zip Code", type text}, {"Zip Code Extension", type text}, {"Store Phone", type text}, {"Continent", type text}, {"City", type text}, {"State", type text}, {"CountryRegion", type text}, {"Address Line 1", type text}, {"Address Line 2", type text}, {"Close Reason", type text}, {"Employees", Int64.Type}, {"Selling Area", type number}}),
				    #"Parsed Date" = Table.TransformColumns(#"Changed Type",{{"Open Date", each Date.From(DateTimeZone.From(_)), type date}, {"Close Date", each Date.From(DateTimeZone.From(_)), type date}, {"Last Remodel Date", each Date.From(DateTimeZone.From(_)), type date}})
				in
				    #"Parsed Date"

