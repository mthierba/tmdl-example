table Promotion

	column Discount
		dataType: Double
		summarizeBy: Sum
		sourceColumn: Discount

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'End Date'
		dataType: DateTime
		formatString = Long Date
		summarizeBy: None
		sourceColumn: End Date

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column 'Promotion Category'
		dataType: String
		summarizeBy: None
		sourceColumn: Promotion Category

		annotation SummarizationSetBy = Automatic

	column 'Promotion Code'
		dataType: String
		summarizeBy: None
		sourceColumn: Promotion Code

		annotation SummarizationSetBy = Automatic

	column 'Promotion Type'
		dataType: String
		summarizeBy: None
		sourceColumn: Promotion Type

		annotation SummarizationSetBy = Automatic

	column Promotion
		dataType: String
		summarizeBy: None
		sourceColumn: Promotion

		annotation SummarizationSetBy = Automatic

	column PromotionKey
		dataType: Int64
		isHidden
		summarizeBy: None
		sourceColumn: PromotionKey

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Start Date'
		dataType: DateTime
		formatString = Long Date
		summarizeBy: None
		sourceColumn: Start Date

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	partition Promotion = M
		mode: Import
		expression =
			let
			    Source = Web.Contents(#"[SourceUrl]", [RelativePath = "pbi-tools/contoso-sales-model/main/data/Promotion.csv"]),
			    Csv = Csv.Document(Source),
			    #"Promoted Headers" = Table.PromoteHeaders(Csv, [PromoteAllScalars=true]),
			    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"PromotionKey", Int64.Type}, {"Promotion Code", type text}, {"Promotion", type text}, {"Discount", type number}, {"Promotion Type", type text}, {"Promotion Category", type text}}),
			    #"Parsed Date" = Table.TransformColumns(#"Changed Type",{{"Start Date", each Date.From(DateTimeZone.From(_)), type date}, {"End Date", each Date.From(DateTimeZone.From(_)), type date}})
			in
			    #"Parsed Date"

